{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "fetchAllData",
    "fullyQualifiedName": "downloadcsv.fetchAllData",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "main",
    "collectionId": "main_downloadcsv",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  let records = [];\n  let currentCount = 1000;\n  let idx = 0;\n  while (currentCount == 1000) {\n    let fetchedData = await Fetch_Targets.run({\n      limit: 1000,\n      offset: idx * 1000\n    });\n    currentCount = fetchedData.length;\n    idx++;\n    records = [...records, ...fetchedData];\n  }\n  const arr = [Object.keys(records[0])].concat(records);\n  const data = arr.map(it => {\n    return Object.values(it).toString();\n  }).join(\"\\n\");\n  download(data, 'data.xlsx', 'text/xlsx');\n}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  let records = [];\n  let currentCount = 1000;\n  let idx = 0;\n  while (currentCount == 1000) {\n    let fetchedData = await Fetch_Targets.run({\n      limit: 1000,\n      offset: idx * 1000\n    });\n    currentCount = fetchedData.length;\n    idx++;\n    records = [...records, ...fetchedData];\n  }\n  const arr = [Object.keys(records[0])].concat(records);\n  const data = arr.map(it => {\n    return Object.values(it).toString();\n  }).join(\"\\n\");\n  download(data, 'data.xlsx', 'text/xlsx');\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": true,
    "policies": [],
    "userPermissions": []
  },
  "id": "main_downloadcsv.fetchAllData",
  "deleted": false,
  "gitSyncId": "62fa1f3184757e0c05541543_630c6222c041e74aa53d28d1"
}